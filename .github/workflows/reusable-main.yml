name: Verify and validate version from version file

on:
  workflow_call:
    inputs:
      main-branch: 
        description: 'main branch name'
        required: false
        default: 'main'
        type: string
      file-name: 
        description: 'Name file that contains version'
        required: false
        default: 'VERSION'
        type: string
    outputs:
      branch_version:
        description: "Branch version"
        value: ${{ jobs.verify_version.outputs.branch_version }}

jobs:
  verify_version:
    runs-on: ubuntu-latest
    outputs:
      branch_version: ${{ steps.get_branch_version.outputs.branch_version }}
    steps:
    - name: Checkout version from main-branch code
      uses: actions/checkout@v3
      with:
        ref: ${{ inputs.main-branch }}
    - name: Get main branch version
      id: get_main_version
      run: echo "main_version=$(cat VERSION | tr -d '[:space:]')" >> $GITHUB_OUTPUT
    - name: Checkout version from PR code
      uses: actions/checkout@v3
    - name: Get branch version
      id: get_branch_version
      run: echo "branch_version=$(cat VERSION | tr -d '[:space:]')" >> $GITHUB_OUTPUT
    - name: Validate branch version
      run: |
        branch_version=${{ steps.get_branch_version.outputs.branch_version }}
        
        if ! [[ $branch_version =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+(\.[0-9]+)*)?(\+[0-9]+(\.[0-9]+)*)?$ ]]; then
          echo "Error: ($branch_version) is not a valid semver."
          exit 1
        fi
    - name: Verify and Compare versions
      run: |
        branch_version=${{ steps.get_branch_version.outputs.branch_version }}
        main_version=${{ steps.get_main_version.outputs.main_version }}
        
        if [ -z "$branch_version" ] || [ $(echo -e "${branch_version}\n${main_version}"|sort -V|head -1) != "${branch_version}" ]; then
          echo "Current version ($branch_version) is greater than the latest version ($main_version)"
        else
          echo "Current version ($branch_version) is not greater than the latest version ($main_version)"
          exit 1
        fi
